# Production Dockerfile for Fly.io
FROM php:8.2-apache

# Install system dependencies
RUN apt-get update && apt-get install -y \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libpq-dev \
    libzip-dev \
    git \
    unzip \
    openssl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install \
        pdo \
        pdo_pgsql \
        pdo_mysql \
        gd \
        zip \
        opcache

# Configure OPCache for production
RUN echo "opcache.enable=1" >> /usr/local/etc/php/conf.d/opcache.ini \
    && echo "opcache.enable_cli=1" >> /usr/local/etc/php/conf.d/opcache.ini \
    && echo "opcache.memory_consumption=128" >> /usr/local/etc/php/conf.d/opcache.ini \
    && echo "opcache.interned_strings_buffer=8" >> /usr/local/etc/php/conf.d/opcache.ini \
    && echo "opcache.max_accelerated_files=4000" >> /usr/local/etc/php/conf.d/opcache.ini \
    && echo "opcache.revalidate_freq=2" >> /usr/local/etc/php/conf.d/opcache.ini

# Install Composer
COPY --from=composer:2.5.5 /usr/bin/composer /usr/bin/composer

# Enable Apache modules
RUN a2enmod rewrite headers

# Configure Apache
COPY apache-config.conf /etc/apache2/sites-available/000-default.conf

WORKDIR /var/www/html

# Copy project files
COPY . .

# Create var directory structure and JWT directory
RUN mkdir -p var/cache var/log config/jwt \
    && chown -R www-data:www-data /var/www/html \
    && chmod -R 775 /var/www/html/var

# Generate JWT keys for production
RUN openssl genpkey -out config/jwt/private.pem -aes256 -algorithm rsa -pkeyopt rsa_keygen_bits:4096 -pass pass:jobyfind \
    && openssl pkey -in config/jwt/private.pem -passin pass:jobyfind -out config/jwt/public.pem -pubout \
    && chown -R www-data:www-data config/jwt \
    && chmod 600 config/jwt/private.pem \
    && chmod 644 config/jwt/public.pem

# Install dependencies
RUN composer install --no-dev --optimize-autoloader --no-scripts --no-interaction

# Ensure correct permissions after composer install
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 775 /var/www/html/var \
    && chmod -R 755 /var/www/html/public

# Switch to www-data user for cache operations
USER www-data

# Clear and warm up cache as www-data user
RUN php bin/console cache:clear --env=prod --no-debug || true \
    && php bin/console cache:warmup --env=prod --no-debug || true

# Switch back to root for Apache
USER root

EXPOSE 8080

# Start Apache
CMD ["apache2-foreground"] 